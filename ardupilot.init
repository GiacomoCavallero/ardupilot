#!/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
SCRIPT=/etc/ardupilot/go_sitl-2019.sh
NAME=ardupilot
DAEMON=ardurover
LOGDIR=/var/lib/$NAME
LOGFILE=$LOGDIR/$NAME.log
INITLOGFILE=$LOGDIR/init.log
RUNAS=root
PIDFILE=/var/run/$NAME.pid

mkdir -p $LOGDIR

date >> $INITLOGFILE
echo $1 >> $INITLOGFILE
start() {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo "$NAME:$(cat $PIDFILE) already running" >> $INITLOGFILE
    return 1
  fi
  echo "------" >> $LOGFILE
  # TODO: the following has a bug and doesn't work
  # test -x $SCRIPT || echo "$SCRIPT does not exist. Exiting." >> $INITLOGFILE ; return 1
  echo "Starting $NAME..." $INITLOGFILE
  date >> $LOGFILE
  chgrp $RUNAS $LOGFILE
  chmod g+w $LOGFILE
  local CMD="$SCRIPT &>> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo "$NAME:$(cat $PIDFILE) started" >> $INITLOGFILE
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo "$NAME not running" >> $INITLOGFILE
    pkill -9 $DAEMON
    return 1
  fi
  echo "Stopping $NAME:$(cat $PIDFILE)..." >> $INITLOGFILE
  # $PIDFILE will contain the PID of the script (go_navio.sh or go_sim.sh)
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  pkill -9 $DAEMON
  echo "$NAME:$(cat $PIDFILE) stopped" >> $INITLOGFILE
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  retart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
esac
